// Given a condition, return the value and index of the first element that fulfills the condition
// If no element passes the condition, return none
// Example: (Data.List.find_index Data.Nat [1,2,3] (Data.Nat.equal 3)) -> (Data.Maybe.some 2)
Data.List.find_index <a> (xs: Data.List a) (cond: a -> Data.Bool) : Data.Maybe Data.Nat
Data.List.find_index a xs cond = Data.List.find_index.go xs cond Data.Nat.zero

// Auxiliary function for find_index
Data.List.find_index.go <a> (xs: Data.List a) (cond: a -> Data.Bool) (idx: Data.Nat) : Data.Maybe Data.Nat
Data.List.find_index.go a (Data.List.nil  t)           cond idx = Data.Maybe.none
Data.List.find_index.go a (Data.List.cons t head tail) cond idx =
  if cond head {
    Data.Maybe.some idx
  } else {
    Data.List.find_index.go tail cond (Data.Nat.succ idx)
  }
