// Given a condition, verifies how many times that condition occurs
// Example: (Data.List.count Data.Nat [1,2,1,3,1,4] (Data.Nat.equal 1)) -> 3
Data.List.count <a> (xs: Data.List a) (cond: a -> Data.Bool) : Data.Nat
Data.List.count a (Data.List.nil t)            cond = Data.Nat.zero
Data.List.count a (Data.List.cons t head tail) cond = 
  let tail_count = Data.List.count tail cond
  Data.Bool.if (cond head) (Data.Nat.succ tail_count) tail_count
