// Applies a function to an entry. If it isn't present, do nothing.
Data.Bits.Map.app <a> (map: Data.Bits.Map a) (key: Data.Bits) (fun: a -> a) : Data.Bits.Map a
Data.Bits.Map.app a Data.Bits.Map.new                            Data.Bits.e        fun = Data.Bits.Map.new
Data.Bits.Map.app a (Data.Bits.Map.tie Data.Maybe.none       lft rgt) Data.Bits.e        fun = Data.Bits.Map.tie Data.Maybe.none lft rgt
Data.Bits.Map.app a (Data.Bits.Map.tie (Data.Maybe.some val) lft rgt) Data.Bits.e        fun = Data.Bits.Map.tie (Data.Maybe.some (fun val)) lft rgt
Data.Bits.Map.app a Data.Bits.Map.new                            (Data.Bits.o pred) fun = Data.Bits.Map.new
Data.Bits.Map.app a (Data.Bits.Map.tie val lft rgt)              (Data.Bits.o pred) fun = Data.Bits.Map.tie val (Data.Bits.Map.app lft pred fun) rgt
Data.Bits.Map.app a Data.Bits.Map.new                            (Data.Bits.i pred) fun = Data.Bits.Map.new
Data.Bits.Map.app a (Data.Bits.Map.tie val lft rgt)              (Data.Bits.i pred) fun = Data.Bits.Map.tie val lft (Data.Bits.Map.app rgt pred fun)
