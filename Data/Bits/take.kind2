// Takes n bits from the bit structure
// Example (Data.Bits.take 2 (Data.Bits.i (Data.Bits.o (Data.Bits.i Data.Bits.e))) -> (Data.Bits.i (Data.Bits.o Data.Bits.e))
Data.Bits.take (n: Data.Nat) (b: Data.Bits): Data.Bits
Data.Bits.take (Data.Nat.zero)        (b)             = (Data.Bits.e)
Data.Bits.take (Data.Nat.succ n.pred) (Data.Bits.e)        = (Data.Bits.e)
Data.Bits.take (Data.Nat.succ n.pred) (Data.Bits.o b.pred) = (Data.Bits.o (Data.Bits.take n.pred b.pred))
Data.Bits.take (Data.Nat.succ n.pred) (Data.Bits.i b.pred) = (Data.Bits.i (Data.Bits.take n.pred b.pred))
