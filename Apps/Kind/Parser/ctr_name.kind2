use Data.String.Parser as Parser
use Apps.Kind.Parser as KParser
use Apps.Kind.SyntaxTree as AST

// Parses a kind constructor name 
KParser/ctr_name : KParser/ AST/CtrName {
  do Parser/ {
    ask start = Parser/get_index

    ask head = Parser/satisfy (c => Data.Char.is_upper c)
    ask tail =  Parser/take_while1 (c => KParser/is_name_char c)
    let val = Data.String.cons head tail

    ask range = KParser/make_range_here start

    return AST/CtrName.new range val
  }
}
