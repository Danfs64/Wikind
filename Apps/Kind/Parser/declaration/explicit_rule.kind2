use Data.String.Parser as Parser
use Apps.Kind.Parser as KParser
use Apps.Kind.SyntaxTree.Concrete.Rule as Rule
use Apps.Kind.SyntaxTree.Concrete.AliasName as AliasName

KParser/declaration.explicit_rule (expected : AliasName/) : KParser/ Rule/ {
  do Parser/ {
    ask start = Parser/get_index

    ask name = KParser/ctr_name

    if (AliasName/same_value name expected) {
      do Parser/ {
        ask pats = Parser/many (KParser/skipping (KParser/pattern))
        KParser/skip
        Parser/char '='
        KParser/skip
        ask body = KParser/term
    
        ask range = KParser/make_range_here start
    
        return Rule/new range name pats body
      }
    } else {
      Parser/empty
    }
  }
}