use Data.String.Parser as Parser
use Apps.Kind.Parser as KParser
use Apps.Kind.SyntaxTree.Sugared.Term as Term

KParser/term.let : KParser/ Term/ {
  do Parser/ {
    ask start = Parser/get_index

    Parser/string "let"
    Parser/whitespace
    ask name = KParser/var_name
    KParser/skip
    Parser/char '='
    KParser/skip
    ask val = KParser/term

    ask range = KParser/make_range_here start

    // Must have either a ; separating or a new line
    Parser/first_of [
      (do Parser/ {
        Parser/skip
        Parser/char ';'
      })
      (do Parser/ {
        KParser/skip_line
        Parser/char 10 // \n
      })
    ]

    KParser/skip
    ask next = KParser/term

    Term/let range name val next
  }
}
