use Apps.Kind.SyntaxTree.Sugared.Term.Literal as Literal
use Apps.Kind.SyntaxTree.Sugared.Pattern as Pattern
use Apps.Kind.SyntaxTree.VarName as VarName
use Apps.Kind.SyntaxTree.Range as Range

//! Convert a Literal into a Pattern if valid
Literal/to_pattern (literal: Literal/) : Data.Maybe Pattern/
Literal/to_pattern (Literal/char range val) = Data.Maybe.some (Pattern/char range val)
Literal/to_pattern (Literal/num_u60 range val) = Data.Maybe.some (Pattern/u60 range val)
Literal/to_pattern (Literal/num_u120 range val) = Data.Maybe.some (Pattern/u120 range val)
Literal/to_pattern (Literal/string range val) = Data.Maybe.some (Pattern/string range val)
//Literal/to_pattern (Literal/num_f60 range val) = 

// TODO: Should we accept Nat literals in patterns?
//Literal/to_pattern (Literal/num_nat) =

// type, help, type_u60, type_f60, num_nat
Literal/to_pattern lit = Data.Maybe.none
