use Apps.Kind.SyntaxTree.Sugared.ToCore as ToCore
use Apps.Kind.SyntaxTree.Sugared as Sugared
use Apps.Kind.SyntaxTree.Core as Core
use Data.List as List
use Data.Pair as Pair

ToCore/entry (entry: Sugared/Entry) (i: Data.U60) :  ToCore/ Data.Unit
ToCore/entry (Sugared/Entry.new name args type rules range) i = do ToCore/ {
  let n_args = ToCore/get_decl_args i
  ask args = ToCore/list args (arg => ToCore/argument arg)
  ask rules = ToCore/list rules (rule => ToCore/rule rule n_args)
  ask type = ToCore/term type
  let entry = do Data.Maybe {
    ask args = args
    ask rules = rules
    ask type = type
    return Core/Entry.new name args type rules range
  }
  let entry = Data.Maybe.extract entry (ToCore/empty) (x => ToCore/add_entry x i)
  return entry
}
