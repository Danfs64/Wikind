use Data.String as String
use Apps.Kind.SyntaxTree.Sugared.Term as Term
use Apps.Kind.SyntaxTree.Sugared.Argument as Argument
use Apps.Kind.SyntaxTree.Sugared.Rule as Rule
use Apps.Kind.SyntaxTree.Sugared.Declaration.Entry as Entry
use Apps.Kind.SyntaxTree.CtrName as CtrName

Entry/show (e: Entry/) : String/Build
Entry/show (Entry/new range name args type rules) =
  let name = CtrName/show name
  let args = String/Build.join (Data.List.map args (a => Argument/show a)) " "
  let sep = String/show ":"
  let type = Term/show type
  let sign = String/Build.join [name args sep type] " "
  let nl = String/show String/new_line
  let rules = String/Build.join (Data.List.map rules (r => Rule/show r)) String/new_line
  String/Build.many [sign nl rules]
