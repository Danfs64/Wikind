Kind.Coverage.CaseTree.show (ident: String) (tree: Kind.Coverage.CaseTree) : String

Kind.Coverage.CaseTree.show ident Kind.Coverage.CaseTree.done =
    String.concat ident "done\n"

Kind.Coverage.CaseTree.show ident Kind.Coverage.CaseTree.uncovered =
    String.concat ident "uncovered\n"

Kind.Coverage.CaseTree.show ident (Kind.Coverage.CaseTree.intro encoded rest) =
    Kind.Printer.text [ ident "intro " (Kind.Name.show encoded) "\n" (Kind.Coverage.CaseTree.show (String.concat " " ident) rest) ]

Kind.Coverage.CaseTree.show ident (Kind.Coverage.CaseTree.case clauses)  =
    Kind.Printer.text [ ident "case\n" (Kind.Printer.text (List.map clauses (x =>
        let Pair.new fst snd = x
        Kind.Printer.text [" " ident fst " => \n" (Kind.Coverage.CaseTree.show (String.concat "  " ident) snd)]))) ]
