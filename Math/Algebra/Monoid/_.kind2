// Automatically derived from Math.Algebra/Monoid/_.type
// A monoid is a semigroup with the left and right identity.
//
// - forall a b c, (a * b) * c = a * (b * c) (Associativity)
// - forall a    , a = a * e                 (Right identity)
// - forall a    , a = e * a                 (Left identity)

#derive[match]
type Math.Algebra.Monoid <t: Type> {
	new (sg: Math.Algebra.Semigroup t) (empty: t) (identity: Math.Algebra.Laws.Identity t (Math.Algebra.Semigroup.concat sg) empty)
}